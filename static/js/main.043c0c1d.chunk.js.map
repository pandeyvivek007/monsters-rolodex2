{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search/search.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","prop","type","placeholder","onChange","onSearchChange","App","event","setState","searchFild","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAegBA,EAbL,SAACC,GACR,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCKhBC,G,MAXA,SAACR,GACZ,OACI,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GACf,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,W,MCK3BM,MAXf,SAAgBC,GACZ,OACI,qBAAKX,UAAU,aAAf,SACI,uBAAOY,KAAK,OACZC,YAAY,SACZC,SAAUH,EAAKI,oBCoCZC,G,wDArCb,aAAc,IAAD,8BACX,gBAcFD,eAAe,SAACE,GACZ,EAAKC,SAAS,CAACC,WAAWF,EAAMG,OAAOC,SAbzC,EAAKC,MAAM,CACTd,SAAU,GACVW,WAAW,IALF,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACV,SAASmB,S,oBAOzC,WACE,MAA4BC,KAAKN,MAA1Bd,EAAP,EAAOA,SAASW,EAAhB,EAAgBA,WACVU,EAAiBrB,EAASsB,QAAO,SAAC3B,GACpC,OAAOA,EAAQE,KAAK0B,cAAcC,SAASb,EAAWY,kBAI1D,OACI,sBAAK/B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAQe,eAAgBa,KAAKb,iBAC7B,cAAC,EAAD,CAAUP,SAAUqB,W,GA/BdI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.043c0c1d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\nconst Card=(props)=> {\r\n    return (\r\n        <div className='card-container'>\r\n            <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n            /> \r\n            <h2>{props.monster.name}</h2>    \r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Card\r\n\r\n\r\n","import React from 'react'\r\nimport Card from '../card/card.component'\r\nimport './card-list.style.css'\r\n\r\nconst CardList=(props)=> {\r\n    return (\r\n        <div className='card-list'>\r\n          {props.monsters.map((monster)=>{\r\n                return <Card key={monster.id} monster={monster}/>\r\n          })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n\r\n","import React from 'react'\r\nimport './search.css'\r\nfunction Search(prop) {\r\n    return (\r\n        <div className='search-box'>\r\n            <input type='text' \r\n            placeholder='Search'\r\n            onChange={prop.onSearchChange}\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, {Component} from 'react';\nimport CardList from './component/card-list/card-list.component';\nimport Search from './component/search/search';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      monsters: [],\n      searchFild:''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=>response.json())\n      .then(users=>this.setState({monsters:users}))\n  }\n\n  onSearchChange=(event)=>{\n      this.setState({searchFild:event.target.value})\n  }\n\n  render(){\n    const {monsters,searchFild}=this.state\n    const filteredMonsters=monsters.filter((monster)=>{\n        return monster.name.toLowerCase().includes(searchFild.toLowerCase())\n    });\n        \n    \n    return(\n        <div className='App'>\n            <h1>Monsters Rolodex</h1>\n            <Search onSearchChange={this.onSearchChange}/>\n            <CardList monsters={filteredMonsters}/>\n        </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}